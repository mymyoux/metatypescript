0 info it worked if it ends with ok
1 verbose cli [ 'node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@2.1.14
3 info using node@v0.10.35
4 verbose node symlink /usr/local/bin/node
5 verbose publish [ '.' ]
6 silly cache add args [ '.', null ]
7 verbose cache add spec .
8 silly cache add parsed spec { raw: '.',
8 silly cache add   scope: null,
8 silly cache add   name: null,
8 silly cache add   rawSpec: '.',
8 silly cache add   spec: '/Users/jeremy.dubois/Documents/private/metatypescript',
8 silly cache add   type: 'directory' }
9 verbose tar pack [ '/Users/jeremy.dubois/.npm/metatypescript/3.1.1/package.tgz',
9 verbose tar pack   '/Users/jeremy.dubois/Documents/private/metatypescript' ]
10 verbose tarball /Users/jeremy.dubois/.npm/metatypescript/3.1.1/package.tgz
11 verbose folder /Users/jeremy.dubois/Documents/private/metatypescript
12 info prepublish metatypescript@3.1.1
13 verbose addLocalTarball adding from inside cache /Users/jeremy.dubois/.npm/metatypescript/3.1.1/package.tgz
14 silly cache afterAdd metatypescript@3.1.1
15 verbose afterAdd /Users/jeremy.dubois/.npm/metatypescript/3.1.1/package/package.json not in flight; writing
16 verbose afterAdd /Users/jeremy.dubois/.npm/metatypescript/3.1.1/package/package.json written
17 silly publish { author:
17 silly publish    { name: 'Jeremy Dubois',
17 silly publish      email: 'mymyoux@gmail.com',
17 silly publish      url: 'http://twitter/mymyoux' },
17 silly publish   name: 'metatypescript',
17 silly publish   description: 'Typescript module - sync. Alternative to CommonJS, AMD and RequireJS',
17 silly publish   version: '3.1.1',
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'https://github.com/mymyoux/metatypescript.git' },
17 silly publish   license: 'MIT',
17 silly publish   main: './lib/main',
17 silly publish   bin: { metatypescript: './bin/pythoncompile.py' },
17 silly publish   dependencies: { typescript: 'latest' },
17 silly publish   devDependencies: {},
17 silly publish   optionalDependencies: {},
17 silly publish   engines: { node: '*' },
17 silly publish   contributors:
17 silly publish    [ { name: 'Nicolas Fontenit',
17 silly publish        email: 'nicolas.fontenit@gmail.com',
17 silly publish        url: 'http://twitter.com/n_fon' },
17 silly publish      { name: 'Guillaume Smaha',
17 silly publish        email: 'guillaume.smaha@gmail.com',
17 silly publish        url: 'http://twitter.com/MouxonBender' } ],
17 silly publish   readme: 'metatypescript\n==============\n\nA synchronous Typescript module system. Alternative to CommonJs, AMD and RequireJS.\n\nIt is designed to manage big projects with a lot of dependencies between files/modules.\n\nIt comes with a bunch of dependencies helpers and JS generations.\n \nThe files are separated into submodules and only submodules than require recompilations will be recompiled (determined by their dependencies). \nEach submodule can be compiled **from 0.4s to 1s** so instead to have a 20s compilation project you will have a 1s compilation project:)\n\n\n##Setup\n\n```\nnpm -g install metatypescript\n```\n\n###Mac OS X\nYou can install terminal-notifier package to have notifications enabled\n\n\tbrew install terminal-notifier\n\t\n###Others OS\nPynotify is used for others OS but still unstable so maybe after an inactive period you will lost notification support\n\n##How it works\nEach submodule is compiled one by one and only include .d.ts of others modules. \n\n##Usage\n```\nmetatypescript [--reset] [--nosound] [--nonotification] [--es5]\n```\n* **reset:**  Will recompile all modules event if they are up to date\n* **nosound:** Disable sound alert when compilation is done\n* **nonotification:** Disable notification alert when compilation is done\n* **es5:** Target ES5 instead of ES3 (see Typescript compiler documentation for this one)\n\nMetatypescript script will search a **metatypescript.json** file inside the current directory.\n**If no file is found**, the script will create an example project and will download the lib folder from https://github.com/borisyankov/DefinitelyTyped\n\n###Example\nIf you launch the command **metatypescript** inside an empty folder it will create an example project with some basic dependencies to help you understand how it works\n\n\n###Configuration file\n**metatypescript.json** config file example:\n\n```\n {\n \t//list of module\'s folders\n\t"folders":[\n\t\t"framework/ghost", \n\t\t"framework/browser",\n\t\t"game/battle"\n\t],\n\t//if you wanted only one JS file from a module and all its dependencies\n\t"out":\n\t{\n\t\t"battle/main":"../js/main.js"\n\t},\n\t//if true will compile for each module a JS file\n\t"compile_modules":false,\n\t"concat_sourcemaps":false\n}\n```\n* **folders:** List of modules paths\n* **out:** Compiles a typescript submodule and all its dependencies into a JS file. **Modules not used by the submodule will not be included!**\n* **compile_modules:** If true, for each module a JS file will be generated will all its submodules inside \n* **concat_sourcemaps:** (not recommended) If true JS files generated by the out parameter will have sourcemaps correctly configured to link JS file files to the original typescripts files. However this feature is currently unstable and add few seconds on each compile time.\n\n###Dependencies helpers\nInside a typescript file you can use these keywords to manage dependencies\n\n\n####File\n```\n\t#File2.ts\n\t///<file="File1.ts"/>\n```\nTell the script than File1 comes before File2.\nWhen the submodule will be compiled to an unique .ts file its content will be : \n\n\t///<reference path="File1.ts"/>\n\t///<reference path="File2.ts"/>\n\n####Module\n\n\t#File1.ts\n\t///<module="folder/module/submodule">\n\nThis line will include the folder/module/submodule .d.ts file to this current submodule. The module path can be shorter depending of the File1.ts path\n\nIf File1 path is:\n\n* **folder/module/submodule2**\n\n```\n#only submodule\'s name is needed\n///<module="submodule"/> \n```\n* **folder/module2/anyname**\n\n```\n#module and submodule are needed\n///<module="module2/submodule"/> \n```\n* **otherwise**\n\n```\n#absolute path is needed\n///<module="folder/module2/submodule"/> \n```\n\t\n####Lib\n\nIn typescript you can include **.d.ts** files to use existing librairy and still be in a strong typed environment. To use them easily with metatypescript put them into a lib folder and include them will the **lib** keyword\n\n\t///<lib="jquery">\n\t#will add /lib/jquery/jquery.d.ts file as dependency \n\nTheses files can be found at https://github.com/borisyankov/DefinitelyTyped\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: 'a2604205c63fc45e80bfe3497fb9581ff7b6df28',
17 silly publish   bugs: { url: 'https://github.com/mymyoux/metatypescript/issues' },
17 silly publish   homepage: 'https://github.com/mymyoux/metatypescript',
17 silly publish   _id: 'metatypescript@3.1.1',
17 silly publish   scripts: {},
17 silly publish   _shasum: '07113e1ad3f4677cbf307265f8ee2ac4ad5ced43',
17 silly publish   _from: '.' }
18 silly mapToRegistry name metatypescript
19 silly mapToRegistry using default registry
20 silly mapToRegistry registry https://registry.npmjs.org/
21 silly mapToRegistry uri https://registry.npmjs.org/metatypescript
22 verbose publish registryBase https://registry.npmjs.org/
23 silly publish uploading /Users/jeremy.dubois/.npm/metatypescript/3.1.1/package.tgz
24 verbose request uri https://registry.npmjs.org/metatypescript
25 verbose request sending authorization for write operation
26 info attempt registry request try #1 at 16:56:13
27 verbose request id 3a8c013f160db906
28 http request PUT https://registry.npmjs.org/metatypescript
29 http 403 https://registry.npmjs.org/metatypescript
30 verbose headers { date: 'Thu, 08 Jan 2015 15:56:14 GMT',
30 verbose headers   server: 'CouchDB/1.5.0 (Erlang OTP/R16B03)',
30 verbose headers   'content-type': 'application/json',
30 verbose headers   'cache-control': 'max-age=60',
30 verbose headers   'content-length': '8075',
30 verbose headers   'accept-ranges': 'bytes',
30 verbose headers   via: '1.1 varnish',
30 verbose headers   'x-served-by': 'cache-lhr6335-LHR',
30 verbose headers   'x-cache': 'MISS',
30 verbose headers   'x-cache-hits': '0',
30 verbose headers   'x-timer': 'S1420732574.073262,VS0,VE879',
30 verbose headers   'keep-alive': 'timeout=10, max=50',
30 verbose headers   connection: 'Keep-Alive' }
31 verbose request invalidating /Users/jeremy.dubois/.npm/registry.npmjs.org/metatypescript on PUT
32 error publish Failed PUT 403
33 verbose stack Error: forbidden cannot modify pre-existing version: 3.1.1
33 verbose stack old={"author":{"name":"Jeremy Dubois","email":"mymyoux@gmail.com","url":"http://twitter/mymyoux"},"name":"metatypescript","description":"Typescript module - sync. Alternative to CommonJS, AMD and RequireJS","version":"3.1.1","repository":{"type":"git","url":"https://github.com/mymyoux/metatypescript.git"},"license":"MIT","main":"./lib/main","bin":{"metatypescript":"./bin/pythoncompile.py"},"dependencies":{"typescript":"latest"},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"contributors":[{"name":"Nicolas Fontenit","email":"nicolas.fontenit@gmail.com","url":"http://twitter.com/n_fon"},{"name":"Guillaume Smaha","email":"guillaume.smaha@gmail.com","url":"http://twitter.com/MouxonBender"}],"gitHead":"c8bed4ba20ae5b57f54c5da1373a719984ebca76","bugs":{"url":"https://github.com/mymyoux/metatypescript/issues"},"homepage":"https://github.com/mymyoux/metatypescript","_id":"metatypescript@3.1.1","scripts":{},"_shasum":"ed49bc0213556dfae4f9f312f95f1c2884476683","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.35","_npmUser":{"name":"mymyoux","email":"mymyoux@gmail.com"},"maintainers":[{"name":"mymyoux","email":"mymyoux@gmail.com"}],"dist":{"shasum":"ed49bc0213556dfae4f9f312f95f1c2884476683","tarball":"http://registry.npmjs.org/metatypescript/-/metatypescript-3.1.1.tgz"}}
33 verbose stack new={"author":{"name":"Jeremy Dubois","email":"mymyoux@gmail.com","url":"http://twitter/mymyoux"},"name":"metatypescript","description":"Typescript module - sync. Alternative to CommonJS, AMD and RequireJS","version":"3.1.1","repository":{"type":"git","url":"https://github.com/mymyoux/metatypescript.git"},"license":"MIT","main":"./lib/main","bin":{"metatypescript":"./bin/pythoncompile.py"},"dependencies":{"typescript":"latest"},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"contributors":[{"name":"Nicolas Fontenit","email":"nicolas.fontenit@gmail.com","url":"http://twitter.com/n_fon"},{"name":"Guillaume Smaha","email":"guillaume.smaha@gmail.com","url":"http://twitter.com/MouxonBender"}],"readme":"metatypescript\u000a==============\u000a\u000aA synchronous Typescript module system. Alternative to CommonJs, AMD and RequireJS.\u000a\u000aIt is designed to manage big projects with a lot of dependencies between files/modules.\u000a\u000aIt comes with a bunch of dependencies helpers and JS generations.\u000a \u000aThe files are separated into submodules and only submodules than require recompilations will be recompiled (determined by their dependencies). \u000aEach submodule can be compiled **from 0.4s to 1s** so instead to have a 20s compilation project you will have a 1s compilation project:)\u000a\u000a\u000a##Setup\u000a\u000a```\u000anpm -g install metatypescript\u000a```\u000a\u000a###Mac OS X\u000aYou can install terminal-notifier package to have notifications enabled\u000a\u000a\u0009brew install terminal-notifier\u000a\u0009\u000a###Others OS\u000aPynotify is used for others OS but still unstable so maybe after an inactive period you will lost notification support\u000a\u000a##How it works\u000aEach submodule is compiled one by one and only include .d.ts of others modules. \u000a\u000a##Usage\u000a```\u000ametatypescript [--reset] [--nosound] [--nonotification] [--es5]\u000a```\u000a* **reset:**  Will recompile all modules event if they are up to date\u000a* **nosound:** Disable sound alert when compilation is done\u000a* **nonotification:** Disable notification alert when compilation is done\u000a* **es5:** Target ES5 instead of ES3 (see Typescript compiler documentation for this one)\u000a\u000aMetatypescript script will search a **metatypescript.json** file inside the current directory.\u000a**If no file is found**, the script will create an example project and will download the lib folder from https://github.com/borisyankov/DefinitelyTyped\u000a\u000a###Example\u000aIf you launch the command **metatypescript** inside an empty folder it will create an example project with some basic dependencies to help you understand how it works\u000a\u000a\u000a###Configuration file\u000a**metatypescript.json** config file example:\u000a\u000a```\u000a {\u000a \u0009//list of module's folders\u000a\u0009\"folders\":[\u000a\u0009\u0009\"framework/ghost\", \u000a\u0009\u0009\"framework/browser\",\u000a\u0009\u0009\"game/battle\"\u000a\u0009],\u000a\u0009//if you wanted only one JS file from a module and all its dependencies\u000a\u0009\"out\":\u000a\u0009{\u000a\u0009\u0009\"battle/main\":\"../js/main.js\"\u000a\u0009},\u000a\u0009//if true will compile for each module a JS file\u000a\u0009\"compile_modules\":false,\u000a\u0009\"concat_sourcemaps\":false\u000a}\u000a```\u000a* **folders:** List of modules paths\u000a* **out:** Compiles a typescript submodule and all its dependencies into a JS file. **Modules not used by the submodule will not be included!**\u000a* **compile_modules:** If true, for each module a JS file will be generated will all its submodules inside \u000a* **concat_sourcemaps:** (not recommended) If true JS files generated by the out parameter will have sourcemaps correctly configured to link JS file files to the original typescripts files. However this feature is currently unstable and add few seconds on each compile time.\u000a\u000a###Dependencies helpers\u000aInside a typescript file you can use these keywords to manage dependencies\u000a\u000a\u000a####File\u000a```\u000a\u0009#File2.ts\u000a\u0009///<file=\"File1.ts\"/>\u000a```\u000aTell the script than File1 comes before File2.\u000aWhen the submodule will be compiled to an unique .ts file its content will be : \u000a\u000a\u0009///<reference path=\"File1.ts\"/>\u000a\u0009///<reference path=\"File2.ts\"/>\u000a\u000a####Module\u000a\u000a\u0009#File1.ts\u000a\u0009///<module=\"folder/module/submodule\">\u000a\u000aThis line will include the folder/module/submodule .d.ts file to this current submodule. The module path can be shorter depending of the File1.ts path\u000a\u000aIf File1 path is:\u000a\u000a* **folder/module/submodule2**\u000a\u000a```\u000a#only submodule's name is needed\u000a///<module=\"submodule\"/> \u000a```\u000a* **folder/module2/anyname**\u000a\u000a```\u000a#module and submodule are needed\u000a///<module=\"module2/submodule\"/> \u000a```\u000a* **otherwise**\u000a\u000a```\u000a#absolute path is needed\u000a///<module=\"folder/module2/submodule\"/> \u000a```\u000a\u0009\u000a####Lib\u000a\u000aIn typescript you can include **.d.ts** files to use existing librairy and still be in a strong typed environment. To use them easily with metatypescript put them into a lib folder and include them will the **lib** keyword\u000a\u000a\u0009///<lib=\"jquery\">\u000a\u0009#will add /lib/jquery/jquery.d.ts file as dependency \u000a\u000aTheses files can be found at https://github.com/borisyankov/DefinitelyTyped\u000a","readmeFilename":"README.md","gitHead":"a2604205c63fc45e80bfe3497fb9581ff7b6df28","bugs":{"url":"https://github.com/mymyoux/metatypescript/issues"},"homepage":"https://github.com/mymyoux/metatypescript","_id":"metatypescript@3.1.1","scripts":{},"_shasum":"07113e1ad3f4677cbf307265f8ee2ac4ad5ced43","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.35","_npmUser":{"name":"mymyoux","email":"mymyoux@gmail.com"},"maintainers":[{"name":"mymyoux","email":"mymyoux@gmail.com"}],"dist":{"shasum":"07113e1ad3f4677cbf307265f8ee2ac4ad5ced43","tarball":"http://registry.npmjs.org/metatypescript/-/metatypescript-3.1.1.tgz"}}: metatypescript
33 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:244:14)
33 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
33 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:373:22)
33 verbose stack     at Request.emit (events.js:98:17)
33 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1318:14)
33 verbose stack     at Request.emit (events.js:117:20)
33 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1266:12)
33 verbose stack     at IncomingMessage.emit (events.js:117:20)
33 verbose stack     at _stream_readable.js:944:16
33 verbose stack     at process._tickCallback (node.js:442:13)
34 verbose statusCode 403
35 verbose pkgid metatypescript
36 verbose cwd /Users/jeremy.dubois/Documents/private/metatypescript
37 error Darwin 14.0.0
38 error argv "node" "/usr/local/bin/npm" "publish"
39 error node v0.10.35
40 error npm  v2.1.14
41 error code E403
42 error forbidden cannot modify pre-existing version: 3.1.1
42 error old={"author":{"name":"Jeremy Dubois","email":"mymyoux@gmail.com","url":"http://twitter/mymyoux"},"name":"metatypescript","description":"Typescript module - sync. Alternative to CommonJS, AMD and RequireJS","version":"3.1.1","repository":{"type":"git","url":"https://github.com/mymyoux/metatypescript.git"},"license":"MIT","main":"./lib/main","bin":{"metatypescript":"./bin/pythoncompile.py"},"dependencies":{"typescript":"latest"},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"contributors":[{"name":"Nicolas Fontenit","email":"nicolas.fontenit@gmail.com","url":"http://twitter.com/n_fon"},{"name":"Guillaume Smaha","email":"guillaume.smaha@gmail.com","url":"http://twitter.com/MouxonBender"}],"gitHead":"c8bed4ba20ae5b57f54c5da1373a719984ebca76","bugs":{"url":"https://github.com/mymyoux/metatypescript/issues"},"homepage":"https://github.com/mymyoux/metatypescript","_id":"metatypescript@3.1.1","scripts":{},"_shasum":"ed49bc0213556dfae4f9f312f95f1c2884476683","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.35","_npmUser":{"name":"mymyoux","email":"mymyoux@gmail.com"},"maintainers":[{"name":"mymyoux","email":"mymyoux@gmail.com"}],"dist":{"shasum":"ed49bc0213556dfae4f9f312f95f1c2884476683","tarball":"http://registry.npmjs.org/metatypescript/-/metatypescript-3.1.1.tgz"}}
42 error new={"author":{"name":"Jeremy Dubois","email":"mymyoux@gmail.com","url":"http://twitter/mymyoux"},"name":"metatypescript","description":"Typescript module - sync. Alternative to CommonJS, AMD and RequireJS","version":"3.1.1","repository":{"type":"git","url":"https://github.com/mymyoux/metatypescript.git"},"license":"MIT","main":"./lib/main","bin":{"metatypescript":"./bin/pythoncompile.py"},"dependencies":{"typescript":"latest"},"devDependencies":{},"optionalDependencies":{},"engines":{"node":"*"},"contributors":[{"name":"Nicolas Fontenit","email":"nicolas.fontenit@gmail.com","url":"http://twitter.com/n_fon"},{"name":"Guillaume Smaha","email":"guillaume.smaha@gmail.com","url":"http://twitter.com/MouxonBender"}],"readme":"metatypescript\u000a==============\u000a\u000aA synchronous Typescript module system. Alternative to CommonJs, AMD and RequireJS.\u000a\u000aIt is designed to manage big projects with a lot of dependencies between files/modules.\u000a\u000aIt comes with a bunch of dependencies helpers and JS generations.\u000a \u000aThe files are separated into submodules and only submodules than require recompilations will be recompiled (determined by their dependencies). \u000aEach submodule can be compiled **from 0.4s to 1s** so instead to have a 20s compilation project you will have a 1s compilation project:)\u000a\u000a\u000a##Setup\u000a\u000a```\u000anpm -g install metatypescript\u000a```\u000a\u000a###Mac OS X\u000aYou can install terminal-notifier package to have notifications enabled\u000a\u000a\u0009brew install terminal-notifier\u000a\u0009\u000a###Others OS\u000aPynotify is used for others OS but still unstable so maybe after an inactive period you will lost notification support\u000a\u000a##How it works\u000aEach submodule is compiled one by one and only include .d.ts of others modules. \u000a\u000a##Usage\u000a```\u000ametatypescript [--reset] [--nosound] [--nonotification] [--es5]\u000a```\u000a* **reset:**  Will recompile all modules event if they are up to date\u000a* **nosound:** Disable sound alert when compilation is done\u000a* **nonotification:** Disable notification alert when compilation is done\u000a* **es5:** Target ES5 instead of ES3 (see Typescript compiler documentation for this one)\u000a\u000aMetatypescript script will search a **metatypescript.json** file inside the current directory.\u000a**If no file is found**, the script will create an example project and will download the lib folder from https://github.com/borisyankov/DefinitelyTyped\u000a\u000a###Example\u000aIf you launch the command **metatypescript** inside an empty folder it will create an example project with some basic dependencies to help you understand how it works\u000a\u000a\u000a###Configuration file\u000a**metatypescript.json** config file example:\u000a\u000a```\u000a {\u000a \u0009//list of module's folders\u000a\u0009\"folders\":[\u000a\u0009\u0009\"framework/ghost\", \u000a\u0009\u0009\"framework/browser\",\u000a\u0009\u0009\"game/battle\"\u000a\u0009],\u000a\u0009//if you wanted only one JS file from a module and all its dependencies\u000a\u0009\"out\":\u000a\u0009{\u000a\u0009\u0009\"battle/main\":\"../js/main.js\"\u000a\u0009},\u000a\u0009//if true will compile for each module a JS file\u000a\u0009\"compile_modules\":false,\u000a\u0009\"concat_sourcemaps\":false\u000a}\u000a```\u000a* **folders:** List of modules paths\u000a* **out:** Compiles a typescript submodule and all its dependencies into a JS file. **Modules not used by the submodule will not be included!**\u000a* **compile_modules:** If true, for each module a JS file will be generated will all its submodules inside \u000a* **concat_sourcemaps:** (not recommended) If true JS files generated by the out parameter will have sourcemaps correctly configured to link JS file files to the original typescripts files. However this feature is currently unstable and add few seconds on each compile time.\u000a\u000a###Dependencies helpers\u000aInside a typescript file you can use these keywords to manage dependencies\u000a\u000a\u000a####File\u000a```\u000a\u0009#File2.ts\u000a\u0009///<file=\"File1.ts\"/>\u000a```\u000aTell the script than File1 comes before File2.\u000aWhen the submodule will be compiled to an unique .ts file its content will be : \u000a\u000a\u0009///<reference path=\"File1.ts\"/>\u000a\u0009///<reference path=\"File2.ts\"/>\u000a\u000a####Module\u000a\u000a\u0009#File1.ts\u000a\u0009///<module=\"folder/module/submodule\">\u000a\u000aThis line will include the folder/module/submodule .d.ts file to this current submodule. The module path can be shorter depending of the File1.ts path\u000a\u000aIf File1 path is:\u000a\u000a* **folder/module/submodule2**\u000a\u000a```\u000a#only submodule's name is needed\u000a///<module=\"submodule\"/> \u000a```\u000a* **folder/module2/anyname**\u000a\u000a```\u000a#module and submodule are needed\u000a///<module=\"module2/submodule\"/> \u000a```\u000a* **otherwise**\u000a\u000a```\u000a#absolute path is needed\u000a///<module=\"folder/module2/submodule\"/> \u000a```\u000a\u0009\u000a####Lib\u000a\u000aIn typescript you can include **.d.ts** files to use existing librairy and still be in a strong typed environment. To use them easily with metatypescript put them into a lib folder and include them will the **lib** keyword\u000a\u000a\u0009///<lib=\"jquery\">\u000a\u0009#will add /lib/jquery/jquery.d.ts file as dependency \u000a\u000aTheses files can be found at https://github.com/borisyankov/DefinitelyTyped\u000a","readmeFilename":"README.md","gitHead":"a2604205c63fc45e80bfe3497fb9581ff7b6df28","bugs":{"url":"https://github.com/mymyoux/metatypescript/issues"},"homepage":"https://github.com/mymyoux/metatypescript","_id":"metatypescript@3.1.1","scripts":{},"_shasum":"07113e1ad3f4677cbf307265f8ee2ac4ad5ced43","_from":".","_npmVersion":"2.1.14","_nodeVersion":"0.10.35","_npmUser":{"name":"mymyoux","email":"mymyoux@gmail.com"},"maintainers":[{"name":"mymyoux","email":"mymyoux@gmail.com"}],"dist":{"shasum":"07113e1ad3f4677cbf307265f8ee2ac4ad5ced43","tarball":"http://registry.npmjs.org/metatypescript/-/metatypescript-3.1.1.tgz"}}: metatypescript
43 error If you need help, you may report this error at:
43 error     <http://github.com/npm/npm/issues>
44 verbose exit [ 1, true ]
